name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGO_TEST_URI: ${{ secrets.MONGO_TEST_URI }}
        run: npm run test:ci

      - name: Run test coverage
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGO_TEST_URI: ${{ secrets.MONGO_TEST_URI }}
        run: npm run test:coverage

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/elibrary-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/elibrary-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
